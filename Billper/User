from Billper.Group import Group


class User:
    __slots__ = ("username", "password", "balance", "visible", "group")

    def __init__(self, username, password):
        self.username = username
        self.password = password
        self.balance = 0
        self.group = dict()
        self.visible = False

# pull data from server after log in!!!!!!!
    def log_in(self, username, password):   # return type is boolean
        if self.visible:
            print("You have already logged in!")
            return
        if self.username == username and self.password == password:
            self.visible = True
            return True
        self.visible = False
        return False

    def log_out(self):
        if not self.visible:
            self.visit_deny()
            return
        self.visible = False

    def get_username(self):
        return self.username

    def money_in(self, money):
        if not self.visible:
            self.visit_deny()
            return
        self.balance += money

    def money_out(self, money):  # return type is float, amount of money out
        balance = self.balance - money
        if not self.visible:
            self.visit_deny()
            return
        if balance < 0:
            print("Not sufficient funds\n")
            return False
        else:
            self.balance = balance
            return True

    def money_check(self):
        if not self.visible:
            self.visit_deny()
            return
        balance = self.balance
        return balance

    def create_group(self, group_name, size, term):
        if not self.visible:
            self.visit_deny()
            return
        group = Group(group_name, size, term, self)
        group.add_user(self)

    def add_group(self, group_num, group):
        if not self.visible:
            self.visit_deny()
            return
        if not group.check_user(self):
            print("Group needs to add you first")
            return
        self.group[group_num] = group
        print(self.get_username(), "Added to", group.get_group_name())

    def get_group(self, group_num):
        if not self.visible:
            self.visit_deny()
            return
        if group_num in self.group:
            return self.group[group_num]
        print("You are not in that group!")
        return

    def get_group_name_list(self):
        if not self.visible:
            self.visit_deny()
            return
        group_num = list(self.group.keys())
        group_name = list()
        for num in group_num:
            group_name.append(self.group[num].get_group_name())
        return group_name

    def get_group_num_list(self):
        if not self.visible:
            self.visit_deny()
            return
        group_num = list(self.group.keys())
        return group_num

    def delete_group(self, group_num):
        if not self.visible:
            self.visit_deny()
            return
        if group_num in self.group:
            group = self.group[group_num]
            if group.check_user(self):
                print("Group needs to delete you first")
                return
            self.group.pop(group_num)
            return
        else:
            print("You are not in that group!")
            return

    @staticmethod
    def visit_deny():
        print("Account cannot be visited!")

# need to update


def main():
    user1 = User("Sean", "123")
    user2 = User("Sam", "321")
    user2.log_in("Sam", "321")
    user2.create_group("sb", 5, 10)
    group_name = user2.get_group_name_list()
    print(group_name)
    group_num = user2.get_group_num_list()
    x = group_num[0]
    print(x)
    group1 = user2.get_group("000001")
    print(group1)
    y = group1.get_group_name()
    print(y)
    group = user2.group[x]
    group.add_user(user2)
    print(group.get_user_name_list())
    user2.money_in(300)
    print(user2.money_out(400))
    print(user2.money_check())
    user2.log_out()
    user1.log_in("Sean", "123")
    group1.add_user(user1)
    print(group.get_user_name_list())
    group.delete_user(user1)
    print(user1.get_group_name_list())
    print(group1.get_user_name_list())




if __name__ == "__main__":
    main()
